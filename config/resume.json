{
  "meta": {
    "theme": "elegant"
  },
  "basics": {
    "name": "Arjun Adhia",
    "label": "Software Development Engineer",
    "image": "",
    "email": "arjun.adhia@gmail.com",
    "phone": "(704) 658-6570",
    "url": "https://arjun.adhia.net",
    "summary": "",
    "location": {
      "address": "2610 1st Ave W",
      "postalCode": "98119",
      "city": "Seattle",
      "countryCode": "US",
      "region": "Washington"
    }
  },
  "work": [
    {
      "name": "AWS EMR Serverless (Amazon Web Services)",
      "position": "Software Development Engineer",
      "startDate": "2021-04",
      "highlights": [
        "Contributed towards launching AWS EMR Serverless, a new AWS EMR offering. Enables clients to setup an EMR cluster 75% quicker by avoiding the need to setup, maintain, or configure EC2 hosts or EKS clusters.",
        "Developed one of EMR Serverless control plane components with >99% availability and  >15 TPS at launch that provides nodes to client's distributed application (i.e. Spark and Hive)",
        "Improved clients' applications' start-time by >85% by implementing 2 features:",
        "Added an application configuration to clients that proactively created nodes before application submission.",
        "Evaluated various optimization strategies to reduce OCI images pull times by 90%.",
        "Designed a multi-tenant service that enables multiple clients to run applications while ensuring network and compute isolation between clients.",
        "Led the implementation of metrics and creation of monitoring dashboards in parts of EMR Serverless to improve debugging and proactively identify issues."
      ]
    },
    {
      "name": "Universal Brand Catalog (Amazon.com)",
      "position": "Software Development Engineer",
      "startDate": "2021-04",
      "endDate": "2017-08",
      "highlights": [
        "Developed a system that maps over 30 billion products to an Amazon brand database daily to discover products and brands not present in the Amazon Catalog and to determine brands’ selling potentials",
        "Maintained a platform (Crater) built on top of AWS Mechanical Turk to allow users to consolidate worker responses manually, increasing accuracy of responses when compared to the default string comparison",
        "Developed a Crater feature to allow users to choose which workers gets paid, saving the original costs of paying all workers, regardless of their responses’ quality",
        "Developed a Crater feature to retrieve responses before all questions (1000+ per batch) were answered, reducing the wait time from days to minutes for downstream consumers",
        "Coordinated the handoff of Crater to another team and documented parity requirements for their effort to consolidate Crater with their own platform to unify functionality across the Selection Monitoring org"
      ]
    },
    {
      "name": "Advertising Platform (Amazon.com)",
      "position": "Software Development Intern",
      "startDate": "2016-05",
      "endDate": "2016-08",
      "highlights": [
        "Worked on the Ad Products team to create a page for advertisers to preview their ads collectively",
        "Maintained site consistency by working with a Sr. UX designer to create the page layout and view",
        "Ensured highest usability of the application by seeking feedback from stakeholders from 3 other teams",
        "Used Java and React JS to create a dynamic webpage that easily scales to show 100+ ads",
        "Deployed the project into production and documented my work for future maintainance"
      ]
    }
  ],
  "education": [
    {
      "institution": "University of North Carolina at Chapel Hill",
      "url": "https://institution.com/",
      "area": "Computer Science",
      "studyType": "Bachelor of Science",
      "startDate": "2013-08",
      "endDate": "2017-05",
      "score": "3.97"
    },
    {
      "institution": "University of North Carolina at Chapel Hill",
      "url": "https://institution.com/",
      "area": "Economics",
      "studyType": "Bachelor of Science",
      "startDate": "2013-08",
      "endDate": "2017-05",
      "score": "4.0"
    },
    {
      "institution": "University of North Carolina at Chapel Hill",
      "url": "https://institution.com/",
      "area": "Mathematics",
      "studyType": "Minor",
      "startDate": "2013-08",
      "endDate": "2017-05"
    }
  ],
  "skills": [
    {
      "name": "Languages",
      "keywords": [
        "Java",
        "Scala",
        "TypeScript",
        "Python",
        "GoLang",
        "Rust",
        "SQL",
        "JavaScript",
        "C/C++"
      ]
    },
    {
      "name": "AWS",
      "keywords": [
        "ECS",
        "ECR",
        "Fargate",
        "Lambda",
        "Step Function",
        "DynamoDB",
        "CloudFormation",
        "CloudWatch",
        "S3",
        "CDK",
        "IAM",
        "KMS",
        "VPC"
      ]
    },
    {
      "name": "Tooling",
      "keywords": [
        "Docker + containerd",
        "Apache Spark",
        "Spring",
        "Guice",
        "React",
        "CI/CD"
      ]
    }
  ],
  "projects": [
    {
      "name": "dhall-to-resume",
      "description": "Created a Rust binary that takes in a Dhall config file and autmoatically generates a LaTex resume to simplify resume configuration. Used this library and GitHub workflows to automatically generate this resume.",
      "entity": "Entity",
      "type": "application"
    },
    {
      "name": "mafiaBot",
      "description": "Created a minimal Python bot on Discord so members can randomly generate teams and assigns roles for specific role-playing games (e.g. mafia)",
      "entity": "Entity",
      "type": "application"
    }
  ]
}
